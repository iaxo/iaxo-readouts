<?xml version="1.0" encoding="UTF-8" standalone="no"?>

<TRestManager name="RESTManagerSim"
              title="Template manager to process a simulation generated by restG4.">
    <!-- Global parameters -->
    <globals>
        <parameter name="mainDataPath" value=""/>
        <parameter name="verboseLevel" value="info"/>
    </globals>

    <TRestRun name="Analysis" title="">
        <parameter name="experiment" value=""/>
        <parameter name="runType" value="default_analysis"/>
        <parameter name="readOnly" value="false"/>
        <parameter name="runNumber" value="auto"/>
        <parameter name="runTag" value="default"/>
        <parameter name="runDescription" value="empty"/>2
        <parameter name="user" value="${USER}"/>
        <parameter name="verboseLevel" value="silent"/>
        <parameter name="overwrite" value="off"/>
        <parameter name="readOnly" value="false"/>

        <!--  <addMetadata type="TRestDetectorReadout" name="vetoSystemReadout" file="./vetoSystemReadout.root"/>-->
        <addMetadata type="TRestDetectorReadout" name="fullReadout" file="./fullReadout.root"/>

        <TRestDetectorGas name="Argon-Isobutane 2Pct 10-10E3Vcm" pressure="1.4" file="server"/>
    </TRestRun>

    <TRestProcessRunner name="TemplateEventProcess" verboseLevel="silent">

        <parameter name="eventsToProcess" value="0"/>
        <parameter name="pureAnalysisOutput" value="ON"/>
        <parameter name="fileSplitSize" value="100E9"/> <!-- 100 GB -->

        <addProcess type="TRestGeant4QuenchingProcess" name="g4Quenching" value="ON">
            <volume name="^scintillatorVolume">
                <particle name="neutron" quenchingFactor="0.1"/>
                <particle name="proton" quenchingFactor="0.1"/>
            </volume>
        </addProcess>

        <addProcess type="TRestGeant4AnalysisProcess" name="g4Ana" value="ON">
            <observable name="sensitiveVolumeEnergy" value="ON"/>
            <observable name="sensitiveVolumeFirstHitTime" value="ON"/>

            <observable name="eventPrimaryParticleName" value="OFF"/>
            <observable name="subEventPrimaryParticleName" value="OFF"/>

            <observable name="xOriginPrimary" value="ON"/>
            <observable name="yOriginPrimary" value="ON"/>
            <observable name="zOriginPrimary" value="ON"/>

            <observable name="energyPrimary" value="ON"/>
        </addProcess>

        <addProcess type="TRestGeant4VetoAnalysisProcess" name="g4Veto" value="ON" observable="all">
            <parameter name="vetoVolumesExpression" value="^scintillatorVolume"/>
        </addProcess>

        <addProcess type="TRestGeant4ToDetectorHitsProcess" name="Geant4ToDetectorHits" value="ON">
            <volume name="Chamber_gas"/>
            <volume name="^scintillatorVolume" type="veto"/>
        </addProcess>

        <addProcess type="TRestDetectorHitsRotationProcess" name="rotation" value="ON">
            <parameter name="center" value="(0,0,0)mm"/>
            <parameter name="axis" value="(0,0,1)"/>
            <parameter name="angle" value="45deg"/> <!-- Double check if this should be + or - -->
        </addProcess>

        <addProcess type="TRestDetectorElectronDiffusionProcess" name="ElectronDiffusion" value="ON">
            <parameter name="electricField" value="130" units="V/cm"/>
            <parameter name="poissonElectronExcitation" value="on"/>
            <parameter name="checkIsInside"
                       value="false"/> <!-- This will drift all hits even those outside readout (but are in TPC)-->
        </addProcess>

        <addProcess type="TRestDetectorLightAttenuationProcess" name="LightAttenuation" value="ON">
            <parameter name="vetoLightAttenuationLength" value="215cm"/> <!-- 400cm according to manufacturer -->
        </addProcess>

        <addProcess type="TRestDetectorHitsAnalysisProcess" name="hitsAna" value="ON">
            <observable name="energy" value="ON"/>
            <observable name="energyX" value="ON"/>
            <observable name="energyY" value="ON"/>
            <observable name="balanceXYenergy" value="ON"/>
            <observable name="maxHitEnergy" value="ON"/>
            <observable name="minHitEnergy" value="ON"/>
            <observable name="meanHitEnergy" value="ON"/>
            <observable name="meanHitEnergyBalance" value="ON"/>
            <observable name="xMean" value="ON"/>
            <observable name="yMean" value="ON"/>
            <observable name="zMean" value="ON"/>
            <observable name="nHitsX" value="ON"/>
            <observable name="nHitsY" value="ON"/>
            <observable name="balanceXYnHits" value="ON"/>
            <observable name="nHitsSizeXY" value="ON"/>
            <observable name="xy2Sigma" value="ON"/>
            <observable name="xySigmaBalance" value="ON"/>
            <observable name="z2Sigma" value="ON"/>
            <observable name="xySkew" value="ON"/>
            <observable name="zSkew" value="ON"/>
            <parameter name="fiducial_x0" value="(0,0,-15)mm"/>
            <parameter name="fiducial_x1" value="(0,0,15)mm"/>
            <parameter name="cylinderFiducialization" value="true"/>
            <parameter name="fiducial_R" value="15mm"/>       <!-- 15 corresponds to mylar window (gas volume) -->
            <observable name="isInsideCylindricalVolume" value="ON"/>
            <observable name="nInsideCylindricalVolume" value="ON"/>
            <observable name="energyInsideCylindricalVolume" value="ON"/>
            <observable name="distanceToCylinderWall" value="ON"/>
            <observable name="distanceToCylinderTop" value="ON"/>
            <observable name="distanceToCylinderBottom" value="ON"/>
            <observable name="xMeanInCylinder" value="ON"/>
            <observable name="yMeanInCylinder" value="ON"/>
            <observable name="zMeanInCylinder" value="ON"/>
            <parameter name="prismFiducialization" value="true"/>
            <parameter name="fiducial_sX" value="60mm"/>
            <parameter name="fiducial_sY" value="60mm"/>
            <parameter name="fiducial_theta" value="45"/>
            <observable name="isInsidePrismVolume" value="ON"/>
            <observable name="nInsidePrismVolume" value="ON"/>
            <observable name="energyInsidePrismVolume" value="ON"/>
            <observable name="distanceToPrismWall" value="ON"/>
            <observable name="distanceToPrismTop" value="ON"/>
            <observable name="distanceToPrismBottom" value="ON"/>
            <observable name="xMeanInPrism" value="ON"/>
            <observable name="yMeanInPrism" value="ON"/>
            <observable name="zMeanInPrism" value="ON"/>
        </addProcess>

        <addProcess type="TRestDetectorHitsToSignalProcess" name="DetectorHitsToSignal" value="ON">
            <parameter name="sampling" value="1ns"/>
        </addProcess>

        <addProcess type="TRestDetectorSignalToRawSignalProcess" name="DetectorSignalToRaw" value="ON">
            <parameter name="nPoints" value="512"/>

            <parameter name="triggerMode" value="integralThresholdTPC"/>
            <!-- <parameter name="triggerModeObservableName" value="g4Ana_sensitiveVolumeFirstHitTime"/> -->
            <parameter name="triggerDelay" value="128"/>
            <observable name="triggerTimeTPC" value="ON"/>

            <parameter name="sampling" value="20ns"/>
            <parameter name="shapingTime" value="869.2ns"/> <!-- 869.2ns -->
            <parameter name="calibrationEnergy" value="(0,5)keV"/>
            <parameter name="calibrationRange" value="(0.05,0.50)"/>

            <parameter name="samplingVeto" value="500ns"/>
            <parameter name="shapingTimeVeto" value="869.2ns"/> <!-- 869.2ns -->
            <parameter name="calibrationEnergyVeto" value="(0,10)MeV"/>
            <parameter name="calibrationRangeVeto" value="(0.05,0.50)"/>
        </addProcess>

        <addProcess type="TRestRawReadoutMetadataProcess" name="readoutMetadataProcess" value="ON"/>

        <addProcess type="TRestRawSignalRangeReductionProcess" name="RangeReduction" value="ON" verboseLevel="info">
            <parameter name="resolutionInBits" value="12"/>
        </addProcess>

        <addProcess type="TRestRawPeaksFinderProcess" name="rawPeaksTPC" value="ON" observable="all">
            <parameter name="channelType" value="tpc"/> <!-- only apply to veto signals -->
            <parameter name="baselineRange" value="(0,5)"/> <!-- compute baseline on this range (in time bins) -->
            <parameter name="thresholdOverBaseline" value="1"/> <!-- compute baseline on this range (in time bins) -->
            <parameter name="distance" value="5"/> <!-- minimum distance between peaks in a single signal -->
            <parameter name="window" value="5"/> <!-- window to group peaks -->
        </addProcess>

        <addProcess type="TRestRawPeaksFinderProcess" name="rawPeaksVeto" value="ON" observable="all">
            <parameter name="channelType" value="veto"/> <!-- only apply to veto signals -->
            <parameter name="baselineRange" value="(0,5)"/> <!-- compute baseline on this range (in time bins) -->
            <parameter name="thresholdOverBaseline" value="1"/> <!-- compute baseline on this range (in time bins) -->
            <parameter name="distance" value="5"/> <!-- minimum distance between peaks in a single signal -->
            <parameter name="window" value="5"/> <!-- window to group peaks -->
        </addProcess>

        <addProcess type="TRestRawSignalAnalysisProcess" name="rawAnaTPC" value="ON">
            <parameter name="channelType" value="tpc"/>
            <observable name="NumberOfSignals" value="ON"/>
            <observable name="NumberOfGoodSignals" value="ON"/>
        </addProcess>

        <addProcess type="TRestRawSignalAnalysisProcess" name="rawAnaVeto" value="ON">
            <parameter name="channelType" value="veto"/>
            <observable name="NumberOfSignals" value="ON"/>
            <observable name="NumberOfGoodSignals" value="ON"/>
        </addProcess>

    </TRestProcessRunner>

    <addTask type="processEvents" value="ON"/>
</TRestManager>
